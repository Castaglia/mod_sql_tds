{"name":"Mod sql tds","body":"MOD_SQL_TDS\r\n===========\r\nThis is a contributed Module For mod_sql that allows it to use an SQL Backend that speaks TDS.\r\n  (Currently Sybase and Microsoft SQL Server).\r\n\r\nAs this is a backend module for mod_sql, all of the interesting documentation is in README.mod_sql.  So look there for \r\nany configuration information you may have.  \r\n\r\nThis is being released in the hopes that someone will find it useful.\r\n\r\nAs always bugfixes, patches, etc. would be helpful.  And a note that you are using it would be nice also :)\r\n\r\nINSTALLING:\r\n===========\r\n\r\nObtain and install TDS libraries.\r\nWe use FreeTDS <http://www.freetds.org>.\r\n\r\nThis module should work the the SYBASE ASE Libraries but since I don't have them, or a platform that they run on\r\nI cannot test them.  If someone gets them to work, please let me know.\r\n\r\nCopy mod_sql_tds.c to ${PROFTPD_SRC}/contrib/ \r\n\r\n    cd ${PROFTPD_SRC} \r\n    ./configure --with-modules=mod_sql:mod_sql_tds \\\r\n                 --with-libraries=$SYBASE/lib  \\\r\n                 --with-includes=$SYABSE/include\r\n\r\nthen make && install as usual.\r\n\r\nOn my system this command looks like this\r\n\r\n    ./configure --with-modules=mod_sql:mod_sql_tds \\\r\n                --with-libraries=/usr/local/lib  \\\r\n                --with-includes=/usr/local/include \r\n\r\nDIRECTIVES\r\n----------\r\n\r\nAll directives are the same as mod_sql.\r\nExcept for a slight change to SQLConnectInfo:\r\n\r\nThe change here is that server must be specified in your interfaces file.\r\nIf you omit server, the module will look to see if you have one specified in the DSQUERY enviroment variable\r\nif that doesn't exist we will exit. \r\n\r\nCAVEAT:  Due to the way FreeTDS(and sybase) libs appear to work. PERCALL + A Default chroot will probably give you problems at best, or flat out not work.  The short reason is that the TDS libs need access to the interfaces or freetds.conf file, and once you chroot, the process cannot access the file, and will not be able to open the DB.  PERSESSION (the default) will work just fine as the DB connection is opened prior to the chroot.\r\n\r\nMy Conf looks like this \r\n\r\n    AuthPAMAuthoritative Off\r\n    SQLConnectInfo INOC@sql0 username password\r\n    SQLAuthTypes Plaintext\r\n    SQLUserInfo tbl_ftp_user userid passwd uid gid home shell\r\n    RequireValidShell off\r\n    SQLGroupInfo tbl_ftp_groups groupname gid members\r\n    SQLAuthenticate on\r\n    SQLLog PASS updatecount\r\n    SQLNamedQuery updatecount UPDATE \"count=count+1 WHERE userid='%u'\" tbl_ftp_user\r\n    SQLDefaultGID 500\r\n    SQLMinUserGID 400\r\n\r\n\r\nMy Interface file for FreeTDS looks like this \r\n\r\n    [SQL0]\r\n      host = 10.0.0.xxx\r\n      port = 1433\r\n      tds version = 7.0\r\n    [SQL1]\r\n      host = 10.1.0.xxx \r\n      port = 1433\r\n      tds version = 7.0","tagline":"TDS Based Authentication Module for ProFTPD / mod_sql","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}